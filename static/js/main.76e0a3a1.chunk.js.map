{"version":3,"sources":["imgs/hourglass.gif","Components/CurrentWeather.js","Components/ForeCastBox.js","Components/ForeCast.js","Components/GetLocation.js","App.js","index.js"],"names":["module","exports","CurrentWeather","props","display_place","Locdata","results","components","station","country_code","toUpperCase","city","county","state","country","weatherID","Weatherdata","current","weather","icon","className","src","Math","floor","temp","ForeCastBox","weathericon","day","humidity","wind","ForeCast","weekday","nextDay","Date","getDay","firstHalf","slice","secondHalf","next7Days","concat","next7daysweather","Forecastdata","map","item","index","displayMe","key","max","wind_speed","GetLocation","enteredlocation","LocationAPIDATA","WeatherAPIDATA","myLocationName","myLat","myLng","contentloaded","handleChange","bind","Location","Weather","PressedEnter","this","event","target","value","name","setState","loc","fetch","then","response","json","Locationapidata","console","log","geometry","lat","lng","long","catch","error","lon","weatherapidata","e","keyCode","type","location","placeholder","onChange","onKeyDown","onClick","faSearch","daily","require","React","Component","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.76e0a3a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hourglass.f1b623ae.gif\";","import React, { Component } from 'react';\r\n\r\nconst CurrentWeather = (props) => {\r\n    let display_place;\r\n\r\n    // confirm the entered location\r\n    \r\n    if(props.Locdata.results[0].components.station){\r\n        display_place = props.Locdata.results[0].components.station +\", \"+(props.Locdata.results[0].components.country_code).toUpperCase();\r\n    }\r\n    else if(props.Locdata.results[0].components.city){\r\n        display_place = props.Locdata.results[0].components.city +\", \"+(props.Locdata.results[0].components.country_code).toUpperCase();\r\n    }\r\n    else if(props.Locdata.results[0].components.county){\r\n        display_place = props.Locdata.results[0].components.county +\", \"+(props.Locdata.results[0].components.country_code).toUpperCase();\r\n    }\r\n    else if(props.Locdata.results[0].components.state){\r\n        display_place = props.Locdata.results[0].components.state +\", \"+(props.Locdata.results[0].components.country_code).toUpperCase();\r\n    }\r\n    else if(props.Locdata.results[0].components.country){\r\n        display_place = props.Locdata.results[0].components.country;\r\n    }\r\n    else{\r\n        display_place = props.Locdata.results[0].components.country;\r\n    }\r\n    \r\n    const weatherID = props.Weatherdata.current.weather[0].icon;\r\n\r\n    return ( \r\n        <div className=\"current-weather\" >\r\n            <div className=\"main-details\">\r\n                <span ><img className=\"current-temp-icon\" src={`http://openweathermap.org/img/wn/${weatherID}@2x.png`} /> </span>\r\n                <span className=\"current-temp\">{Math.floor(props.Weatherdata.current.temp)}&deg;</span>\r\n                <span className=\"place-name\">{display_place}</span> \r\n            </div>\r\n            {/* <div className=\"extra-details\">\r\n                <span className=\"current-details humidity\">Humidity: {props.Weatherdata.current.humidity}</span>\r\n                <span className=\"current-details clouds\">Clouds: {props.Weatherdata.current.clouds}</span>\r\n                <span className=\"current-details pressure\">Pressure: {props.Weatherdata.current.pressure}</span>\r\n                <span className=\"current-details wind\">Wind: {props.Weatherdata.current.wind_speed}</span>\r\n            </div> */}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default CurrentWeather;\r\n \r\n\r\n\r\n \r\n","import React from 'react';\r\n\r\nconst ForeCastBox = (props) => {\r\n\r\n    return ( \r\n        <div className=\"forecast-child-box\" >\r\n\r\n          <span >\r\n            <img className=\"forecast-temp-icon\" src={`http://openweathermap.org/img/wn/${props.weathericon}@2x.png`} />\r\n          </span>\r\n\r\n          <div className=\"forecast-details\">\r\n            <span className=\"day-name\"> \r\n            {props.day}\r\n            </span>\r\n\r\n            <span className=\"temp\"> \r\n            {Math.floor(props.temp)}&deg;\r\n            </span>\r\n\r\n            <span className=\"humidity\">\r\n            Humidity: {props.humidity}\r\n            </span>\r\n\r\n            <span className=\"wind\">\r\n            Wind: {props.wind}\r\n            </span>\r\n           </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ForeCastBox;","import React from 'react';\r\nimport ForeCastBox from \"./ForeCastBox\"\r\n\r\nconst ForeCast = (props) => {\r\n\r\n    const dateObj = new Date();\r\n    const weekday =  ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\r\n    const nextDay = (dateObj.getDay() + 1);\r\n\r\n    const firstHalf = weekday.slice(nextDay, 7);\r\n    const secondHalf = weekday.slice(0, nextDay);\r\n    const next7Days = firstHalf.concat(secondHalf);\r\n\r\n    const next8daysweather = props.Forecastdata;\r\n    \r\n    const next7daysweather = next8daysweather.slice(1, 7)\r\n\r\n    next7daysweather.map((item,index) => {\r\n        item.day = next7Days[index];\r\n    })\r\n\r\n\r\n    const displayMe = next7daysweather.map((item,index) => \r\n        <ForeCastBox key={index} \r\n        day ={item.day}\r\n        temp={item.temp.max} \r\n        wind = {item.wind_speed}\r\n        humidity = {item.humidity}\r\n        weathericon = {item.weather[0].icon}\r\n        />\r\n    )\r\n    \r\n    return ( \r\n        <div className=\"forecast-parent-box\" >\r\n            \r\n             {displayMe}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ForeCast;","import React from \"react\"\r\nimport CurrentWeather from \"./CurrentWeather\"\r\nimport Forecast from \"./ForeCast\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch,fa } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class GetLocation extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            enteredlocation: \"Mumbai\",\r\n            LocationAPIDATA: {},\r\n            WeatherAPIDATA: {},\r\n            myLocationName: null,\r\n            myLat: null,\r\n            myLng: null,\r\n            contentloaded: false,\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.Location = this.Location.bind(this);\r\n        this.Weather = this.Weather.bind(this);\r\n        this.PressedEnter = this.PressedEnter.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //Fetch Default location\r\n        this.Location();\r\n\r\n    }\r\n\r\n    handleChange(event){\r\n        const {value, name} = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    Location(){\r\n        const loc =  this.state.enteredlocation;\r\n        fetch(` https://api.opencagedata.com/geocode/v1/json?q=${loc}&key=565adc4e5b404eb3a0d2e66df10b4a49`)\r\n        .then(response => response.json())\r\n        .then(Locationapidata => \r\n            {   \r\n                console.log(Locationapidata);\r\n\r\n                this.setState({\r\n                    LocationAPIDATA: Locationapidata,\r\n                    myLat: Locationapidata.results[0].geometry.lat,\r\n                    myLng: Locationapidata.results[0].geometry.lng,\r\n                }) \r\n\r\n                const lat = this.state.myLat;\r\n                const long = this.state.myLng;\r\n                this.Weather(lat,long);\r\n            }\r\n            ).catch(error => console.log(error));\r\n    }\r\n\r\n    Weather(lat,lon){\r\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&%20exclude=hourly,daily&appid=54175a73c73470b1810d761786a3154e`)\r\n        .then(response => response.json())\r\n        .then(weatherapidata => {\r\n            console.log(weatherapidata);\r\n            this.setState({\r\n                WeatherAPIDATA: weatherapidata,\r\n                contentloaded: true\r\n            })\r\n        })   \r\n        .catch(error => console.log(error));   \r\n    }\r\n\r\n    PressedEnter(e){\r\n        if(e.keyCode == 13){\r\n            this.Location();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <>\r\n            {this.state.contentloaded ? \r\n            <>\r\n                <div className=\"input-box-container\">\r\n                <span className=\"logo\">theweather.co</span>\r\n                    <div className=\"input-box\">\r\n                        <input className=\"input-location\" \r\n                                type=\"text\" name=\"enteredlocation\" \r\n                                value={this.state.location}\r\n                                placeholder=\"Enter Location\" \r\n                                onChange={this.handleChange} \r\n                                onKeyDown = {this.PressedEnter} />\r\n\r\n                        <FontAwesomeIcon className=\"search-button\" onClick={this.Location} icon={faSearch} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <CurrentWeather Locdata={this.state.LocationAPIDATA} \r\n                                enteredlocation={this.state.enteredlocation} \r\n                               Weatherdata = {this.state.WeatherAPIDATA} /> \r\n       \r\n                <Forecast Forecastdata={this.state.WeatherAPIDATA.daily} />\r\n            </>\r\n            : <img className=\"loader\" src={require('../imgs/hourglass.gif')} />}\r\n\r\n\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","import React from \"react\";\nimport GetLocation from \"./Components/GetLocation\"\n\nexport default () => (\n  <>\n    <GetLocation />\n  </>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./style.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}